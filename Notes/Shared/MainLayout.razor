@inherits LayoutComponentBase

<PageTitle>Notes</PageTitle>

<div class="page block lg:flex h-full text-white">
    <div class="w-full lg:h-full lg:min-w-80 lg:w-80 max-h-96 lg:max-h-[unset] bg-zinc-800 border-r border-zinc-700 overflow-hidden flex">
        <NavMenu HandleChangeActiveNote="@HandleChangeActiveNote" HandleCreateNote="@HandleCreateNote" />
    </div>

    <main class="w-full h-full lg:w-[unset] lg:grow bg-zinc-900 overflow-hidden">
        <Notes.Pages.Index HandleChangeTextarea="@HandleChangeTextarea" HandleChangeTitle="@HandleChangeTitle" HandleDeleteNote="@HandleDeleteNote" />
    </main>
</div>

@code {
    private void HandleChangeTitle(ChangeEventArgs e)
    {
        if (e is not null && e.Value is not null)
        {
            string value = e.Value.ToString() ?? "";
            State.Md.ActiveNote.Title = value;
            StateHasChanged();
        }
    }

    private void HandleChangeTextarea(ChangeEventArgs e)
    {
        if (e is not null && e.Value is not null)
        {
            string value = e.Value.ToString() ?? "";
            State.Md.ActiveNote.Text = value;

            if (State.Notes.Count == 0) {
                State.Md.ActiveNote.Id = Guid.NewGuid();
                State.AddToNotes(State.Md.ActiveNote);
            }

            State.UpdateNote(State.Md.ActiveNote);
            StateHasChanged();
        }
    }

    private void HandleChangeActiveNote(MoodyData moodyData)
    {
        State.Md.ActiveNote = moodyData;
        StateHasChanged();
    }

    private void HandleCreateNote()
    {
        State.AddToNotes(new MoodyData());
        StateHasChanged();
    }

    private void HandleDeleteNote()
    {
        int IndexOfNote = State.Notes.FindIndex(e => e.Id == State.Md.ActiveNote.Id);

        if (IndexOfNote > -1)
        {
            State.DeleteNote(State.Md.ActiveNote);

            if (IndexOfNote == 0)
            {
                if (State.Notes.Count == 0)
                { 
                    State.Md.ActiveNote = new MoodyData();
                }
                else
                {
                     State.Md.ActiveNote = State.Notes.First();
                }
            }
            else if (IndexOfNote > State.Notes.Count - 1)
            {
                State.Md.ActiveNote = State.Notes[IndexOfNote - 1];
            }
            else if (IndexOfNote > 0)
            {
                State.Md.ActiveNote = State.Notes[IndexOfNote];
            }

            StateHasChanged();
        }
    }
}
