@using Notes.Data
@inject MoodyService moodyService

<div class="container-fluid">
    <button @onclick=@NewNote>addNew</button>
    <ul>
        @for (int i = 0; i < notes.Count(); i++)
        {
            int index = i;
            int id = notes[i].Id;

            string str = notes[i].Title;
            bool isLast = index == notes.Count() - 1;
            bool isActive = id == moodyService.Md?.ActiveNoteId;

            <li class="@(isLast ? "" : "mb-2")">
                <button class="p-4 flex w-full hover:bg-zinc-700 @(isActive ? "bg-zinc-900" : "")" @onclick="@(() => HandleChangeActiveNoteId(notes[index]))">@isActive @isLast @notes[index].Title</button>
            </li>
        }
    </ul>
</div>

@code {
    private List<MoodyData> notes = new List<MoodyData>();

    protected override void OnInitialized()
    {
        notes = moodyService.GetNotes();
    }

    protected async void OnAfterRenderAsync(bool firstRender)
    {
        //if (firstRender)
        //{
        //    
    //}
    }

    private void NewNote()
    {
        moodyService.AddToNotes(new MoodyData() {Id = 1 + notes.Count()});
    }

    private void HandleChangeActiveNoteId(MoodyData moodyData)
    {
        moodyService.Md.ActiveNote = moodyData;
        moodyService.Md.ActiveNoteId = moodyData.Id;
        Console.WriteLine($"Size={moodyService.GetNotes().Count} Sel={moodyData.Id}");
        Console.WriteLine($"Title = [ {moodyData.Title} ] Text = [ {moodyData.Text} ]");
    }
}