@using Notes.Data
@inject MoodyService moodyService

@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage ProtectedLocalStore

<div class="container-fluid">
  <ul>
    @for (int index = 0; index < list.Count(); index++)
    {
      int i = index;
      string str = list[i];
      bool isLast = i == list.Count() - 1;
      bool isActive = i == moodyService.Md?.ActiveNoteId;

      <li class="@(isLast ? "" : "mb-2")">
        <button class="p-4" @onclick="@(() => HandleChangeActiveNoteId(i))">@isActive @isLast @list[i]</button>
      </li>
    }
  </ul>
</div>

@code {
    public List<string> list = new List<string> { "my first note", "my second note" };

    private void HandleChangeActiveNoteId (int index) {
        moodyService.Md.ActiveNoteId = index;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var result = await ProtectedLocalStore.GetAsync<Dictionary<string, Moody>>("MdNotes");

            if (result.Success && result.Value != null) // Check for null value
            {
                moodyService.Notes = result.Value;
                StateHasChanged(); // Ensure UI updates after data retrieval
            }
        }

        if (moodyService.Notes != null)
        {
            await ProtectedLocalStore.SetAsync("MdNotes", moodyService.Notes);
        }
    }
}
